s <- start
path <- NULL
while (s < 13) {
s.new <- sample(1:13, size = 1, prob = P[s, ])
path <- c(path, s.new)
s <- s.new
}
path
}
simulate_PA(pc_matrix)
simulate_PA <- function(P, start = 1) {
s <- start
path <- s
while (s < 13) {
s.new <- sample(1:13, size = 1, prob = P[s, ])
path <- c(path, s.new)
s <- s.new
}
path
}
simulate_PA(pc_matrix)
s <- simulate_PA(pc_matrix)
pc_states[s]
simulate_PA2 <- function(P, start = 1) {
s <- start
path <- s
while (s < 13) {
s.new <- sample(1:13, size = 1, prob = P[s, ])
path <- c(path, s.new)
s <- s.new
}
length(path) - 1
}
S <- replicate(10000, simulate_PA2(pc_matrix))
S <- replicate(100000, simulate_PA2(pc_matrix))
mean(S)
load("~/Dropbox/Google Drive/Retrosheet/pbp.2019.Rdata")
PA_count <- function(d){
d %>%
mutate(pseq = str_remove_all(PITCH_SEQ_TX,
"[.>123N+*]"),
pseq_length = str_length(pseq),
Count = paste(BALLS_CT, STRIKES_CT,
sep="-"))
}
d2019 <- PA_count(d2019)
mean(d2019$pseq_length)
S <- replicate(1000000, simulate_PA2(pc_matrix))
mean(S) # 3.87851
Q <- pc_matrix[-13, -13]
N <- solve(diag(rep(1, 13)) - Q)
N <- solve(diag(rep(1, 12)) - Q)
N[1, ]
sum(N[1, ])
apply(N, 1, sum)
transition_graph <- function(S, title = ""){
require(ggplot2)
require(CalledStrike)
d <- data.frame(count=c('0-0', '1-0', '0-1', '2-0',
'1-1', '0-2',
'3-0', '2-1', '1-2',
'3-1', '2-2', '3-2'),
strikes=c(0, 0, 1, 0, 1, 2,
0, 1, 2, 1, 2, 2),
balls=c(0, 1, 0, 2, 1, 0, 3,
2, 1, 3, 2, 3),
N.Pitches=c(0, 1, 1, 2, 2, 2,
3, 3, 3, 4, 4, 5)) %>%
mutate(Balls_Adv = balls - strikes)
p <- ggplot(d,
aes(N.Pitches, Balls_Adv, label=count)) +
geom_path(data=filter(d, strikes==0),
aes(N.Pitches, Balls_Adv), color="blue") +
geom_path(data=filter(d, strikes==1),
aes(N.Pitches, Balls_Adv), color="blue") +
geom_path(data=filter(d, strikes==2),
aes(N.Pitches, Balls_Adv), color="blue") +
geom_path(data=filter(d, balls==0),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==1),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==2),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==3),
aes(N.Pitches, Balls_Adv), color="green") +
xlab("Pitch Number") +
ylab("") +
ggtitle("") +
geom_label(fill = "brown", color = "white",
size = 5) +
xlim(0, 5)
b <- function(count){
as.numeric(unlist(str_split(count, "-")))[1]
}
s <- function(count){
as.numeric(unlist(str_split(count, "-")))[2]
}
S$b_balls <- sapply(S$b_count, b)
S$b_strikes <- sapply(S$b_count, s)
S$e_balls <- sapply(S$e_count, b)
S$e_strikes <- sapply(S$e_count, s)
S %>%
filter(e_count != "X") -> S1
S %>%
filter(e_count == "X") -> S2
p + geom_text(data = S1,
mapping = aes((b_balls + b_strikes +
e_balls + e_strikes) / 2,
(b_balls - b_strikes +
e_balls - e_strikes) / 2,
label = round(P, 2)),
nudge_y = 0.3,
color = "red",
size = 5) +
increasefont() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle(paste(title,
"Probabilities of Count Transitions")) +
centertitle() -> p1
p1 +
geom_text(data = filter(S2, b_strikes < 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = 0.3, color = "blue",
size = 5,
fontface = 'bold') +
geom_text(data = filter(S2, b_strikes == 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = -0.3, color = "blue",
fontface = 'bold', size = 5)
}
head(d)
S2019 <- filter(d, Season == 2019)
transition_graph(S2019)
transition_graph <- function(S, title = ""){
require(ggplot2)
require(CalledStrike)
d <- data.frame(count=c('0-0', '1-0', '0-1', '2-0',
'1-1', '0-2',
'3-0', '2-1', '1-2',
'3-1', '2-2', '3-2'),
strikes=c(0, 0, 1, 0, 1, 2,
0, 1, 2, 1, 2, 2),
balls=c(0, 1, 0, 2, 1, 0, 3,
2, 1, 3, 2, 3),
N.Pitches=c(0, 1, 1, 2, 2, 2,
3, 3, 3, 4, 4, 5)) %>%
mutate(Balls_Adv = balls - strikes)
p <- ggplot(d,
aes(N.Pitches, Balls_Adv, label=count)) +
geom_path(data=filter(d, strikes==0),
aes(N.Pitches, Balls_Adv), color="blue") +
geom_path(data=filter(d, strikes==1),
aes(N.Pitches, Balls_Adv), color="blue") +
geom_path(data=filter(d, strikes==2),
aes(N.Pitches, Balls_Adv), color="blue") +
geom_path(data=filter(d, balls==0),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==1),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==2),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==3),
aes(N.Pitches, Balls_Adv), color="green") +
xlab("Pitch Number") +
ylab("") +
ggtitle("") +
geom_label(fill = "brown", color = "white",
size = 5) +
xlim(0, 5) +
theme_minimal()
b <- function(count){
as.numeric(unlist(str_split(count, "-")))[1]
}
s <- function(count){
as.numeric(unlist(str_split(count, "-")))[2]
}
S$b_balls <- sapply(S$b_count, b)
S$b_strikes <- sapply(S$b_count, s)
S$e_balls <- sapply(S$e_count, b)
S$e_strikes <- sapply(S$e_count, s)
S %>%
filter(e_count != "X") -> S1
S %>%
filter(e_count == "X") -> S2
p + geom_text(data = S1,
mapping = aes((b_balls + b_strikes +
e_balls + e_strikes) / 2,
(b_balls - b_strikes +
e_balls - e_strikes) / 2,
label = round(P, 2)),
nudge_y = 0.3,
color = "red",
size = 5) +
increasefont() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle(paste(title,
"Probabilities of Count Transitions")) +
centertitle() -> p1
p1 +
geom_text(data = filter(S2, b_strikes < 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = 0.3, color = "blue",
size = 5,
fontface = 'bold') +
geom_text(data = filter(S2, b_strikes == 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = -0.3, color = "blue",
fontface = 'bold', size = 5)
}
transition_graph(S2019)
transition_graph <- function(S, title = ""){
require(ggplot2)
require(CalledStrike)
d <- data.frame(count=c('0-0', '1-0', '0-1', '2-0',
'1-1', '0-2',
'3-0', '2-1', '1-2',
'3-1', '2-2', '3-2'),
strikes=c(0, 0, 1, 0, 1, 2,
0, 1, 2, 1, 2, 2),
balls=c(0, 1, 0, 2, 1, 0, 3,
2, 1, 3, 2, 3),
N.Pitches=c(0, 1, 1, 2, 2, 2,
3, 3, 3, 4, 4, 5)) %>%
mutate(Balls_Adv = balls - strikes)
p <- ggplot(d,
aes(N.Pitches, Balls_Adv, label=count)) +
geom_path(data=filter(d, strikes==0),
aes(N.Pitches, Balls_Adv), color="brown") +
geom_path(data=filter(d, strikes==1),
aes(N.Pitches, Balls_Adv), color="brown") +
geom_path(data=filter(d, strikes==2),
aes(N.Pitches, Balls_Adv), color="brown") +
geom_path(data=filter(d, balls==0),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==1),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==2),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==3),
aes(N.Pitches, Balls_Adv), color="green") +
xlab("Pitch Number") +
ylab("") +
ggtitle("") +
geom_label(fill = "brown", color = "white",
size = 5) +
xlim(0, 5) +
theme_minimal()
b <- function(count){
as.numeric(unlist(str_split(count, "-")))[1]
}
s <- function(count){
as.numeric(unlist(str_split(count, "-")))[2]
}
S$b_balls <- sapply(S$b_count, b)
S$b_strikes <- sapply(S$b_count, s)
S$e_balls <- sapply(S$e_count, b)
S$e_strikes <- sapply(S$e_count, s)
S %>%
filter(e_count != "X") -> S1
S %>%
filter(e_count == "X") -> S2
p + geom_text(data = S1,
mapping = aes((b_balls + b_strikes +
e_balls + e_strikes) / 2,
(b_balls - b_strikes +
e_balls - e_strikes) / 2,
label = round(P, 2)),
nudge_y = 0.3,
color = "red",
size = 5) +
increasefont() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle(paste(title,
"Probabilities of Count Transitions")) +
centertitle() -> p1
p1 +
geom_text(data = filter(S2, b_strikes < 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = 0.3, color = "blue",
size = 5,
fontface = 'bold') +
geom_text(data = filter(S2, b_strikes == 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = -0.3, color = "blue",
fontface = 'bold', size = 5)
}
transition_graph(S2019)
transition_graph <- function(S, title = ""){
require(ggplot2)
require(CalledStrike)
d <- data.frame(count=c('0-0', '1-0', '0-1', '2-0',
'1-1', '0-2',
'3-0', '2-1', '1-2',
'3-1', '2-2', '3-2'),
strikes=c(0, 0, 1, 0, 1, 2,
0, 1, 2, 1, 2, 2),
balls=c(0, 1, 0, 2, 1, 0, 3,
2, 1, 3, 2, 3),
N.Pitches=c(0, 1, 1, 2, 2, 2,
3, 3, 3, 4, 4, 5)) %>%
mutate(Balls_Adv = balls - strikes)
p <- ggplot(d,
aes(N.Pitches, Balls_Adv, label=count)) +
geom_path(data=filter(d, strikes==0),
aes(N.Pitches, Balls_Adv), color="brown") +
geom_path(data=filter(d, strikes==1),
aes(N.Pitches, Balls_Adv), color="brown") +
geom_path(data=filter(d, strikes==2),
aes(N.Pitches, Balls_Adv), color="brown") +
geom_path(data=filter(d, balls==0),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==1),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==2),
aes(N.Pitches, Balls_Adv), color="green") +
geom_path(data=filter(d, balls==3),
aes(N.Pitches, Balls_Adv), color="green") +
xlab("Pitch Number") +
ylab("") +
ggtitle("") +
geom_label(fill = "brown", color = "white",
size = 6) +
xlim(0, 5) +
theme_minimal()
b <- function(count){
as.numeric(unlist(str_split(count, "-")))[1]
}
s <- function(count){
as.numeric(unlist(str_split(count, "-")))[2]
}
S$b_balls <- sapply(S$b_count, b)
S$b_strikes <- sapply(S$b_count, s)
S$e_balls <- sapply(S$e_count, b)
S$e_strikes <- sapply(S$e_count, s)
S %>%
filter(e_count != "X") -> S1
S %>%
filter(e_count == "X") -> S2
p + geom_text(data = S1,
mapping = aes((b_balls + b_strikes +
e_balls + e_strikes) / 2,
(b_balls - b_strikes +
e_balls - e_strikes) / 2,
label = round(P, 2)),
nudge_y = 0.3,
color = "red",
size = 5) +
increasefont() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle(paste(title,
"Probabilities of Count Transitions")) +
centertitle() -> p1
p1 +
geom_text(data = filter(S2, b_strikes < 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = 0.3, color = "blue",
size = 5,
fontface = 'bold') +
geom_text(data = filter(S2, b_strikes == 2),
mapping = aes(b_balls + b_strikes,
b_balls - b_strikes,
label = round(P, 2)),
nudge_y = -0.3, color = "blue",
fontface = 'bold', size = 5)
}
transition_graph(S2019)
transition_graph(filter(d, Season == 2000))
transition_graph(filter(d, Season == 2000), "2000")
transition_graph(filter(d, Season == 2020), "2020")
library(ShinyBayes)
HowardPrior()
library(ShinyBayes)
HowardPrior()
library(ShinyBayes)
HowardPrior()
library(ShinyBayes)
HowardPrior()
library(ShinyBayes)
TwoProportions()
Triplot()
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
runApp('inst/shiny-examples/HowardPrior')
HowardPrior()
library(CalledStrike)
BattingMeasure()
runApp('~/Dropbox/2021 WORK/Shiny_2021/brushing')
runApp('~/Dropbox/2021 WORK/Shiny_2021/thematic')
runApp('~/Dropbox/2021 WORK/Shiny_2021/thematic')
install.packages("thematic")
install.packages("thematic")
install.packages("thematic")
install.packages("thematic")
shiny::runApp('~/Dropbox/2021 WORK/Shiny_2021/thematic')
setwd("~/Dropbox/2021 WORK/Shiny_2021/brushing")
runApp()
?fluidPage
runApp()
runApp()
runApp()
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/CalledStrike/inst/shiny-examples/PitchValue')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/CalledStrike/inst/shiny-examples/PitchValue')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/CalledStrike/inst/shiny-examples/PitchValue')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/CalledStrike/inst/shiny-examples/PitchValue')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/CalledStrike/inst/shiny-examples/PitchValue')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/CalledStrike/inst/shiny-examples/PitchValue')
source('~/.active-rstudio-document', echo=TRUE)
install.packages(c("boot", "cachem", "cluster", "dotCall64", "gert", "kableExtra", "lifecycle", "MASS", "metR", "mgcv", "mime", "promises", "RcppArmadillo", "testthat", "usethis", "xfun"))
shiny::runApp('~/Dropbox/2021 WORK/Shiny_2021/ShinyBaseball Work/Pitch_Count_Type')
runApp('~/Dropbox/2021 WORK/Shiny_2021/ShinyBaseball Work/Pitch_Count_Type')
runApp('~/Dropbox/2021 WORK/Shiny_2021/ShinyBaseball Work/Pitch_Count_Type')
runApp('~/Dropbox/2021 WORK/Shiny_2021/ShinyBaseball Work/Pitch_Count_Type')
runApp('~/Dropbox/2021 WORK/Shiny_2021/ShinyBaseball Work/Pitch_Count_Type')
runApp('~/Dropbox/2021 WORK/Shiny_2021/ShinyBaseball Work/Pitch_Count_Type')
runApp('~/Dropbox/2021 WORK/Shiny_2021/ShinyBaseball Work/Pitch_Count_Type')
library(ShinyBaseball)
PitchCount()
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/PitchCount2')
install.packages(c("cli", "pkgload", "quantreg", "RcppParallel", "renv", "svglite", "tibble"))
install.packages(c("RcppArmadillo", "rvest", "xfun", "zoo"))
library(LearnBayes)
head(stanfordheart)
head(stanfordheart,10)
install.packages(c("e1071", "RCurl", "sf", "survival", "units", "XML"))
install.packages(c("diffobj", "e1071", "renv", "sf"))
increasefont
library(CalledStrike)
increasefont
centertitle
library(ProbBayes)
bar_plot
install.packages("callr")
library(tmap)
geocode_OSM("India")
library(tmaptools)
geocode_OSM("India")
geocode_OSM("CBS Weg 1, Heerlen")
geocode_OSM("712 Sutton Place, Findlay, OH, USA")
data(NLD_muni)
osm_NLD <- read_osm(NLD_muni, ext=1.1)
install.packages("OpenStreetMap")
osm_NLD <- read_osm(NLD_muni, ext=1.1)
osm_NLD <- read_osm(NLD_muni, ext=1.1)
tm_shape(osm_NLD) +
tm_rgb() +
tm_shape(NLD_muni) +
tm_polygons("population", convert2density=TRUE, style="kmeans", alpha=.7, palette="Purples")
install.packages(c("cpp11", "gert", "packrat", "renv", "thematic", "tinytex", "vctrs"))
library(baseballr)
d <- scrape_statcast_savant("2021-04-01","2021-04-01")
d <- scrape_statcast_savant("2021-04-01", "2021-04-01")
names(d)
d <- scrape_statcast_savant("2021-03-15", "2021-04-01")
d <- scrape_statcast_savant("2021-03-15", "2021-03-15")
library(remotes)
remotes::install_github("BillPetti/baseballr")
library(ShinyBaseball)
BrushingZone()
FourMeasures()
PitchOutcome()
PitchTypeCount()
SprayChart()
SprayCompare()
BrushingZone()
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/BrushingZone')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/BrushingZone')
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/BrushingZone')
?radioButtons
runApp('~/Dropbox/My Mac (MacBook-Air.attlocal.net)/Documents/GitHub/ShinyBaseball/ShinyBaseball/inst/shiny-examples/BrushingZone')
install.packages(c("cli", "gh", "lwgeom", "processx", "remotes", "reprex"))
48090.98 / 7 * 12
4406.5 / 7 * 12
install.packages(c("ape", "bitops", "bookdown", "brio", "haven", "httpuv", "knitr", "later", "pcaPP", "RSQLite", "V8"))
shiny::runApp('~/Dropbox/2020 WORK/Baseball Blog Work/bin_pitch_locations/app FF')
setwd("~/Dropbox/2021 WORK/Shiny_2021/Shiny Seminar - Miami/Work for Seminar/templates/histogram")
